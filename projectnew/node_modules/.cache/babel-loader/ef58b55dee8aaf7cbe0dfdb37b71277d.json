{"ast":null,"code":"import _classCallCheck from \"/home/perfectperformance/Desktop/projectnew/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/perfectperformance/Desktop/projectnew/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/perfectperformance/Desktop/projectnew/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/perfectperformance/Desktop/projectnew/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/perfectperformance/Desktop/projectnew/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/perfectperformance/Desktop/projectnew/src/components/main_page/component.js\";\nimport React, { Component } from 'react';\nimport { GraphQLClient } from 'graphql-request';\nimport axios from 'axios';\nvar gql = new GraphQLClient(\"http://localhost:4000/graphql\", {\n  headers: {}\n});\nexport var MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  _createClass(MainPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      gql.request(\"query getI{\\n        getIngridients{\\n                id,\\n                title,\\n                description\\n\\n        }}\", {}).then(function (data) {\n        return _this2.setState({\n          ingridientsList: data.getIngridients\n        });\n      });\n      var promise = fetch('http://localhost:4000/user_form', {\n        method: 'post'\n      });\n    }\n  }]);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          recipeDescription = _this$state.recipeDescription,\n          recipeName = _this$state.recipeName;\n      gql.request(\"mutation  createRecipe(\\n            $title:String!,  $description:String!){\\n            createRecipe(\\n                title:$title,description:$description\\n            )\\n            {\\n                title, description\\n            }}\", {\n        title: recipeName,\n        description: recipeDescription\n      }); // .then(() => this.props.history.push('/'))\n    };\n\n    _this.handleDescription = function (e) {\n      _this.setState({\n        recipeDescription: e.target.value\n      });\n    };\n\n    _this.handleName = function (e) {\n      _this.setState({\n        recipeName: e.target.value\n      });\n    };\n\n    _this.state = {\n      ingridientsList: [],\n      recipeName: null,\n      recipeDescription: null,\n      RecipeIngridients: []\n    };\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"render\",\n    // componentDidMount() {\n    //     axios.get(`http://localhost:4000`)\n    //         .then(res => {\n    //             console.log('ok')\n    //             const persons = res.data;\n    //             this.setState({ persons });\n    //         })\n    // }\n    //\n    // handleSubmit = event => {\n    //     event.preventDefault();\n    //\n    //     const params = { recipeName:this.state.recipeName,\n    //         recipeDescription:this.state.recipeDescription\n    //     }\n    //\n    //     axios.post(`http://localhost:4000`)\n    //         .then(res => {\n    //             console.log(res);\n    //             console.log(res.data);\n    //         })\n    // };\n    value: function render() {\n      console.log(this.state, this.props);\n      return React.createElement(\"div\", {\n        className: \"fpage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"group_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" \\u041C\\u043E\\u0438 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u044B\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.ingridientsList ? this.state.ingridientsList.map(function (ing) {\n        return React.createElement(\"option\", {\n          value: \"\".concat(ing.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, ing.title);\n      }) : 'loading'), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleName,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        onChange: this.handleDescription,\n        placeholder: \"\\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0430\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u043D\\u0433\\u0440\\u0438\\u0434\\u0438\\u0435\\u043D\\u0442\\u044B\"), React.createElement(\"button\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n    }\n  }]);\n\n  return MainPage;\n}(Component);","map":{"version":3,"sources":["/home/perfectperformance/Desktop/projectnew/src/components/main_page/component.js"],"names":["React","Component","GraphQLClient","axios","gql","headers","MainPage","request","then","data","setState","ingridientsList","getIngridients","promise","fetch","method","props","handleSubmit","e","preventDefault","state","recipeDescription","recipeName","title","description","handleDescription","target","value","handleName","RecipeIngridients","console","log","map","ing","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { GraphQLClient } from 'graphql-request';\nimport axios from 'axios';\n\nconst gql = new GraphQLClient(\"http://localhost:4000/graphql\", { headers: {} });\nexport class MainPage extends Component{\n    componentDidMount() {\n\n        gql.request(`query getI{\n        getIngridients{\n                id,\n                title,\n                description\n\n        }}`, {}).then(data=> this.setState({ingridientsList: data.getIngridients}));\n\n        let promise = fetch('http://localhost:4000/user_form', {\n            method:'post'\n        });\n        \n    };\n\n    constructor(props){\n        super(props);\n        this.state = {\n            ingridientsList:[],\n            recipeName: null,\n            recipeDescription: null,\n            RecipeIngridients: []\n        }\n    };\n\n    handleSubmit = (e) => {\n            e.preventDefault();\n        const {\n            recipeDescription,recipeName,\n        } = this.state;\n        gql.request(`mutation  createRecipe(\n            $title:String!,  $description:String!){\n            createRecipe(\n                title:$title,description:$description\n            )\n            {\n                title, description\n            }}`, {title:recipeName, description:recipeDescription})\n            // .then(() => this.props.history.push('/'))\n    };\n\n    handleDescription = (e) => {\n\n        this.setState({recipeDescription: e.target.value})\n    };\n\n    handleName = (e) => {\n\n        this.setState({recipeName: e.target.value})\n    };\n\n    // componentDidMount() {\n    //     axios.get(`http://localhost:4000`)\n    //         .then(res => {\n    //             console.log('ok')\n    //             const persons = res.data;\n    //             this.setState({ persons });\n    //         })\n    // }\n    //\n    // handleSubmit = event => {\n    //     event.preventDefault();\n    //\n    //     const params = { recipeName:this.state.recipeName,\n    //         recipeDescription:this.state.recipeDescription\n    //     }\n    //\n    //     axios.post(`http://localhost:4000`)\n    //         .then(res => {\n    //             console.log(res);\n    //             console.log(res.data);\n    //         })\n    // };\n\n\n    render(){\n        console.log(this.state, this.props)\n        return(\n           <div className='fpage'>\n               <section className='group_header'>\n                   <h1> Мои рецепты</h1>\n               </section>\n               <div>\n                   <select>\n                       {this.state.ingridientsList ? this.state.ingridientsList.map(ing => <option value={`${ing.id}`}>{ing.title}</option>) : 'loading'}\n                   </select>\n                   <form onSubmit={this.handleSubmit}>\n                       <input onChange={this.handleName} placeholder=\"Название\"/><br/>\n                       <textarea onChange={this.handleDescription} placeholder=\"описание рецепта\"></textarea>\n                       <button onSubmit={this.handleSubmit}>Добавить ингридиенты</button>\n                       <button onSubmit={this.handleSubmit}>Отправить</button>\n                   </form>\n               </div>\n           </div>\n\n        )\n    };\n}\n"]},"metadata":{},"sourceType":"module"}